# created a database 
use database end_to_end;
# carrier table creation
create table dim_carrier(
carrier_code string primary key,
carrier_name string
);
#airport table creation
create table dim_airport(
origin_airport_code string,
dest_airport_code string
);
#date table creation
create table dim_date(
flight_date date primary key,
quarter varchar(10),
is_weekend boolean
);
#flights table creation
create table fact_flights(
flight_date_id date references dim_date(flight_date),
 OP_CARRIER_FL_NUM varchar(10),
 OP_CARRIER string references dim_carrier(carrier_code),
 origin_code string,
 dest_code string,
 CRS_DEP_TIME time, 
 DEP_TIME time, 
 DEP_DELAY float, 
 TAXI_OUT float, 
 TAXI_IN float, 
 CRS_ARR_TIME time, 
 ARR_TIME time, 
 ARR_DELAY float, 
 CANCELLED float, 
 CANCELLATION_CODE string, 
 DIVERTED float, 
 CRS_ELAPSED_TIME float,
 ACTUAL_ELAPSED_TIME float,
 DISTANCE float, 
 CARRIER_DELAY float, 
 WEATHER_DELAY float, 
 NAS_DELAY float, 
 SECURITY_DELAY float, 
 LATE_AIRCRAFT_DELAY float, 
 quarter1 varchar,
 Flight_Status string, 
 Ground_Time float,
 month_flight int
);
#staging airport table creation
create table dim_staging_airport(
origin_airport_code string,
dest_airport_code string
);
#staging carrier table creation
create table dim_carrier_staging(
carrier_code string primary key,
carrier_name string
);
MERGE INTO DIM_AIRPORT AS target
USING DIM_STAGING_AIRPORT AS source
ON target.origin_airport_code = source.origin_airport_code
   AND target.dest_airport_code = source.dest_airport_code
WHEN NOT MATCHED THEN
INSERT (origin_airport_code, dest_airport_code)
VALUES (source.origin_airport_code, source.dest_airport_code);
SELECT origin_airport_code, dest_airport_code, COUNT(*) as duplicate_count
FROM DIM_AIRPORT
GROUP BY origin_airport_code, dest_airport_code
HAVING COUNT(*) > 1;
merge into dim_carrier as target
using dim_carrier_staging as source 
on target.carrier_code=source.carrier_code
when not matched then 
insert (carrier_code,carrier_name)
values(source.carrier_code,source.carrier_name);
